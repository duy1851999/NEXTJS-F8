// 'use client'
// const Slide = () => {
//     return (
//         <div className="w-full h-40 bg-purple-600 text-white flex items-center justify-center rounded-lg">
//             <h2 className="text-2xl font-bold">M·ªü b√°n kh√≥a JavaScript Pro üèÜ</h2>
//         </div>
//     );
// };

// export default Slide;


// "use client";
// import { useState, useEffect } from "react";
// import Image from "next/image";
// import { ChevronLeft, ChevronRight } from "lucide-react";

// const slides = [
//     {
//         title: "M·ªü b√°n kh√≥a JavaScript Pro",
//         description:
//             "T·ª´ 08/08/2024 kh√≥a h·ªçc s·∫Ω c√≥ gi√° 1.399k. Khi kh√≥a h·ªçc ho√†n thi·ªán s·∫Ω tr·ªü v·ªÅ gi√° g·ªëc.",
//         image: "/slide/slide_pro.png",
//     },
//     {
//         title: "H·ªçc HTML CSS cho ng∆∞·ªùi m·ªõi",
//         description:
//             "Th·ª±c h√†nh d·ª± √°n v·ªõi Figma, h√†ng trƒÉm b√†i t·∫≠p v√† th·ª≠ th√°ch, h∆∞·ªõng d·∫´n 100% b·ªüi S∆°n ƒê·∫∑ng, t·∫∑ng k√®m Flashcards, v.v.",
//         image: "/slide/html_css_pro.png",
//     },
//     {
//         title: "H·ªçc ReactJS Mi·ªÖn Ph√≠!",
//         description:
//             "Kh√≥a h·ªçc ReactJS t·ª´ c∆° b·∫£n t·ªõi n√¢ng cao. K·∫øt qu·∫£ c·ªßa kh√≥a h·ªçc n√†y l√† b·∫°n c√≥ th·ªÉ l√†m h·∫ßu h·∫øt c√°c d·ª± √°n th∆∞·ªùng g·∫∑p v·ªõi ReactJS.",
//         image: "/slide/Reactjs.png",
//     },
//     {
//         title: "Th√†nh Qu·∫£ c·ªßa H·ªçc Vi√™n",
//         description:
//             "ƒê·ªÉ ƒë·∫°t ƒë∆∞·ª£c k·∫øt qu·∫£ t·ªët trong m·ªçi vi·ªác ta c·∫ßn x√°c ƒë·ªãnh m·ª•c ti√™u r√µ r√†ng cho vi·ªác ƒë√≥. H·ªçc l·∫≠p tr√¨nh c≈©ng kh√¥ng l√† ngo·∫°i l·ªá.",
//         image: "/slide/f8_show.png",
//     },
//     {
//         title: "F8 tr√™n Youtube",
//         description:
//             "F8 ƒë∆∞·ª£c nh·∫Øc t·ªõi ·ªü m·ªçi n∆°i, ·ªü ƒë√¢u c√≥ c∆° h·ªôi vi·ªác l√†m cho ngh·ªÅ IT v√† c√≥ nh·ªØng con ng∆∞·ªùi y√™u th√≠ch l·∫≠p tr√¨nh F8 s·∫Ω ·ªü ƒë√≥.",
//         image: "/slide/Banner_03_youtube.png",
//     },
//     {
//         title: "F8 tr√™n Facebook",
//         description:
//             "F8 ƒë∆∞·ª£c nh·∫Øc t·ªõi ·ªü m·ªçi n∆°i, ·ªü ƒë√¢u c√≥ c∆° h·ªôi vi·ªác l√†m cho ngh·ªÅ IT v√† c√≥ nh·ªØng con ng∆∞·ªùi y√™u th√≠ch l·∫≠p tr√¨nh F8 s·∫Ω ·ªü ƒë√≥.",
//         image: "/slide/Facebook.png",
//     },
// ];

// const Slide = () => {
//     const [currentIndex, setCurrentIndex] = useState(0);

//     // T·ª± ƒë·ªông chuy·ªÉn slide sau 5 gi√¢y
//     useEffect(() => {
//         const interval = setInterval(() => {
//             nextSlide();
//         }, 5000);
//         return () => clearInterval(interval);
//     }, [currentIndex]);

//     // Chuy·ªÉn sang slide ti·∫øp theo
//     const nextSlide = () => {
//         setCurrentIndex((prevIndex) =>
//             prevIndex === slides.length - 1 ? 0 : prevIndex + 1
//         );
//     };

//     // Chuy·ªÉn v·ªÅ slide tr∆∞·ªõc ƒë√≥
//     const prevSlide = () => {
//         setCurrentIndex((prevIndex) =>
//             prevIndex === 0 ? slides.length - 1 : prevIndex - 1
//         );
//     };

//     return (
//         <div className="relative w-[1690px] h-[300px] mx-auto overflow-hidden rounded-lg">
//             <div className="flex transition-transform duration-500 ease-in-out"
//                 style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
//                 {slides.map((slide, index) => (
//                     <div key={index} className="w-full flex">
//                         {/* Ph·∫ßn m√¥ t·∫£ */}
//                         <div className="w-[640px] h-[300px] bg-gradient-to-r from-purple-600 to-blue-500 p-6 rounded-lg text-white flex flex-col justify-center">
//                             <h2 className="text-3xl font-bold mb-3">{slide.title}</h2>
//                             <p className="mb-4">{slide.description}</p>
//                             <button className="px-4 py-2 border border-white rounded-lg hover:bg-white hover:text-purple-600 transition">
//                                 XEM TH√ÄNH QU·∫¢
//                             </button>
//                         </div>

//                         {/* Ph·∫ßn ch√≠nh gi·ªØa (tr√πng m√†u) */}
//                         <div className="flex-grow bg-gradient-to-r from-purple-600 to-blue-500 h-[270px]"></div>

//                         {/* Ph·∫ßn hi·ªÉn th·ªã ·∫£nh */}
//                         <div className="w-[600px] h-[300px] relative">
//                             <Image
//                                 src={slide.image}
//                                 alt="Slide image"
//                                 layout="fill"
//                                 objectFit="cover"
//                                 className="rounded-lg"
//                             />
//                         </div>
//                     </div>
//                 ))}
//             </div>

//             {/* N√∫t ƒëi·ªÅu h∆∞·ªõng */}
//             <button
//                 onClick={prevSlide}
//                 className="absolute top-1/2 left-2 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-200 transition"
//             >
//                 <ChevronLeft size={24} />
//             </button>
//             <button
//                 onClick={nextSlide}
//                 className="absolute top-1/2 right-2 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-200 transition"
//             >
//                 <ChevronRight size={24} />
//             </button>

//             <div className="absolute bottom-10 left-3 flex space-x-1">
//                 {slides.map((_, index) => (
//                     <div
//                         key={index}
//                         onClick={() => setCurrentIndex(index)}
//                         className={`h-2 rounded-full cursor-pointer transition-all duration-300 ${index === currentIndex ? "w-14 bg-gray-700" : "w-8 bg-gray-300"
//                             }`}
//                     ></div>
//                 ))}
//             </div>
//         </div>
//     );
// };

// export default Slide;


"use client";
import { useState, useEffect } from "react";
import Image from "next/image";
import { ChevronLeft, ChevronRight } from "lucide-react";

const slides = [
    {
        title: "M·ªü b√°n kh√≥a JavaScript Pro",
        description:
            "T·ª´ 08/08/2024 kh√≥a h·ªçc s·∫Ω c√≥ gi√° 1.399k. Khi kh√≥a h·ªçc ho√†n thi·ªán s·∫Ω tr·ªü v·ªÅ gi√° g·ªëc.",
        image: "/slide/slide_pro.png",
        action: "H·ªåC TH·ª¨ MI·ªÑN PH√ç"
    },
    {
        title: "H·ªçc HTML CSS cho ng∆∞·ªùi m·ªõi",
        description:
            "Th·ª±c h√†nh d·ª± √°n v·ªõi Figma, h√†ng trƒÉm b√†i t·∫≠p v√† th·ª≠ th√°ch, h∆∞·ªõng d·∫´n 100% b·ªüi S∆°n ƒê·∫∑ng, t·∫∑ng k√®m Flashcards, v.v.",
        image: "/slide/html_css_pro.png",
        action: "H·ªåC TH·ª¨ MI·ªÑN PH√ç"
    },
    {
        title: "H·ªçc ReactJS Mi·ªÖn Ph√≠!",
        description:
            "Kh√≥a h·ªçc ReactJS t·ª´ c∆° b·∫£n t·ªõi n√¢ng cao. K·∫øt qu·∫£ c·ªßa kh√≥a h·ªçc n√†y l√† b·∫°n c√≥ th·ªÉ l√†m h·∫ßu h·∫øt c√°c d·ª± √°n th∆∞·ªùng g·∫∑p v·ªõi ReactJS.",
        image: "/slide/Reactjs.png",
        action: "ƒêƒÇNG K√ù NGAY"
    },
    {
        title: "Th√†nh Qu·∫£ c·ªßa H·ªçc Vi√™n",
        description:
            "ƒê·ªÉ ƒë·∫°t ƒë∆∞·ª£c k·∫øt qu·∫£ t·ªët trong m·ªçi vi·ªác ta c·∫ßn x√°c ƒë·ªãnh m·ª•c ti√™u r√µ r√†ng cho vi·ªác ƒë√≥. H·ªçc l·∫≠p tr√¨nh c≈©ng kh√¥ng l√† ngo·∫°i l·ªá.",
        image: "/slide/f8_show.png",
        action: "XEM TH√ÄNH QU·∫¢"
    },
    {
        title: "F8 tr√™n Youtube",
        description:
            "F8 ƒë∆∞·ª£c nh·∫Øc t·ªõi ·ªü m·ªçi n∆°i, ·ªü ƒë√¢u c√≥ c∆° h·ªôi vi·ªác l√†m cho ngh·ªÅ IT v√† c√≥ nh·ªØng con ng∆∞·ªùi y√™u th√≠ch l·∫≠p tr√¨nh F8 s·∫Ω ·ªü ƒë√≥.",
        image: "/slide/Banner_03_youtube.png",
        action: "ƒêƒÇNG K√ù K√äNH"
    },
    {
        title: "F8 tr√™n Facebook",
        description:
            "F8 ƒë∆∞·ª£c nh·∫Øc t·ªõi ·ªü m·ªçi n∆°i, ·ªü ƒë√¢u c√≥ c∆° h·ªôi vi·ªác l√†m cho ngh·ªÅ IT v√† c√≥ nh·ªØng con ng∆∞·ªùi y√™u th√≠ch l·∫≠p tr√¨nh F8 s·∫Ω ·ªü ƒë√≥.",
        image: "/slide/Facebook.png",
        action: "THAM GIA NH√ìM"
    },
];

const Slide = () => {
    const [currentIndex, setCurrentIndex] = useState(0);

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex((prevIndex) => (prevIndex + 1) % slides.length);
        }, 5000);
        return () => clearInterval(interval);
    }, []);

    const prevSlide = () => {
        setCurrentIndex((prevIndex) =>
            prevIndex === 0 ? slides.length - 1 : prevIndex - 1
        );
    };

    const nextSlide = () => {
        setCurrentIndex((prevIndex) => (prevIndex + 1) % slides.length);
    };

    return (
        <div className="relative w-[1690px] h-[300px] rounded-lg bg-gradient-to-r from-purple-600 to-blue-500 ">
            <div className="overflow-hidden">
                <div
                    className="flex transition-transform duration-500 ease-in-out"
                    style={{ transform: `translateX(-${currentIndex * 100}%)` }}
                >
                    {slides.map((slide, index) => (
                        <div key={index} className="w-full flex-shrink-0 flex">
                            {/* Ph·∫ßn m√¥ t·∫£ */}
                            <div className="w-[640px] h-[300px] p-6  text-white flex flex-col justify-center ">
                                <h2 className="text-3xl font-bold mb-3">{slide.title}</h2>
                                <p className="mb-4">{slide.description}</p>
                                <button className="py-1 border-2 border-white rounded-xl w-40 hover:bg-white hover:text-purple-600 transition">
                                    {slide.action}
                                </button>
                            </div>

                            {/* Ph·∫ßn hi·ªÉn th·ªã ·∫£nh */}
                            <div className="flex-grow h-[300px] relative">
                                <Image
                                    src={slide.image}
                                    alt="Slide image"
                                    layout="fill"
                                    objectFit="cover"
                                    className="rounded-lg"
                                />
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* N√∫t ƒëi·ªÅu h∆∞·ªõng */}
            <button
                onClick={prevSlide}
                className="absolute top-1/2 left-0 -ml-4 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-200 transition"
            >
                <ChevronLeft size={24} />
            </button>
            <button
                onClick={nextSlide}
                className="absolute top-1/2 right-0 -mr-4 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-200 transition"
            >
                <ChevronRight size={24} />
            </button>

            {/* Dots ƒëi·ªÅu h∆∞·ªõng */}
            <div className="absolute -bottom-6 left-10 transform flex space-x-2">
                {slides.map((_, index) => (
                    <button
                        key={index}
                        onClick={() => setCurrentIndex(index)}
                        className={`h-2 rounded-full cursor-pointer transition-all duration-300 ${index === currentIndex ? "w-12 bg-gray-700" : "w-8 bg-gray-300"
                            }`}
                    ></button>
                ))}
            </div>
        </div>
    );
};

export default Slide;


